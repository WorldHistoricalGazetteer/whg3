version: '2.19'

networks:
  WHG3:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:

  web:
    networks:
      - WHG3
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile-django.prod
      args:
        - WHGADMIN_PASSWORD
        - APP_PORT
    image: whg3_web:latest
    container_name: web
    volumes:
      - .:/app
      - /home/whgadmin/sites/whgv3/media:/app/media
      - /home/whgadmin/sites/whgv3/static:/app/static
      - /home/whgadmin/sites/whgv3/cache:/app/cache
      - /home/whgadmin/logs/whgv3:/app/whg/logs
      - /home/whgadmin/sites/data_dumps:/app/data_dumps
    env_file:
      - ./.env/.prod-whg3
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust # SHOULD BE RECONFIGURED FOR PRODUCTION ENVIRONMENT
      APP_PORT: ${APP_PORT}
    ports:
      - "8001:${APP_PORT}"
    user: "1000:1000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
      - db_beta
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 300s
      retries: 3
      start_period: 30s
      timeout: 10s
    ### SHOULD CONSIDER IMPLEMENTING THE FOLLOWING
#     deploy:
#       replicas: 3
#       resources:
#         limits:
#           memory: 500M
#           cpus: "0.5"
#       placement:
#         constraints:
#           - node.role == manager

#   db:
#     networks:
#       - WHG3
#     platform: linux/amd64
#     image: postgis/postgis:15-3.4
#     container_name: postgres
#     volumes:
#       - /home/whgadmin/databases/v2:/var/lib/postgresql/data
#     env_file:
#       - ./.env/.prod-whg3
#     environment:
#       POSTGRES_HOST_AUTH_METHOD: trust # SHOULD BE RECONFIGURED FOR PRODUCTION ENVIRONMENT
#       DB_NAME: whgv3
#     ports:
#       - 127.0.0.1:5433:5432
#     restart: unless-stopped
#     ### SHOULD CONSIDER IMPLEMENTING THE FOLLOWING
# #     deploy:
# #       replicas: 1
# #       resources:
# #         limits:
# #           memory: 1G
# #           cpus: "1.0"

  db_beta:
    networks:
      - WHG3
    platform: linux/amd64
    image: postgis/postgis:15-3.4
    container_name: postgres_beta
    command: ["postgres", "-c", "hba_file=/etc/postgresql/pg_hba.conf"]
    volumes:
      - /home/whgadmin/databases/v3:/var/lib/postgresql/data
      - ./compose/production/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    env_file:
      - ./.env/.prod-whg3
    ports:
      - "127.0.0.1:5434:${DB_PORT_BETA}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 300s
      retries: 3
      start_period: 30s
      timeout: 10s
    ### SHOULD CONSIDER IMPLEMENTING THE FOLLOWING
#     deploy:
#       replicas: 2
#       resources:
#         limits:
#           memory: 1G
#           cpus: "1.0"

  redis:
    networks:
      - WHG3
    platform: linux/amd64
    image: redis:bullseye
    container_name: redis
    ports: [6380:6379]
    volumes:
      - /home/whgadmin/logs:/app/whg/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 300s
      retries: 3
      start_period: 30s
      timeout: 10s

  celery_worker:
    image: whg3_web:latest
    command: celery -A whg worker -l INFO
    container_name: celery_worker
    networks:
      - WHG3
    volumes:
      - .:/app
      - /home/whgadmin/sites/whgv3/media:/app/media
      - /home/whgadmin/sites/whgv3/static:/app/static
      - /home/whgadmin/sites/whgv3/cache:/app/cache
      - /home/whgadmin/logs/whgv3:/app/whg/logs
      - /home/whgadmin/sites/data_dumps:/app/data_dumps
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - ./.env/.prod-whg3
    depends_on:
      - redis
      - db_beta
    restart: unless-stopped

  celery_beat:
    image: whg3_web:latest
    command: ["sh", "-c", "rm -f './celerybeat.pid' && celery -A whg beat -l INFO"]
    container_name: celery_beat
    networks:
      - WHG3
    volumes:
      - .:/app
      - /home/whgadmin/sites/whgv3/media:/app/media
      - /home/whgadmin/sites/whgv3/static:/app/static
      - /home/whgadmin/sites/whgv3/cache:/app/cache
      - /home/whgadmin/logs/whgv3:/app/whg/logs
      - /home/whgadmin/sites/data_dumps:/app/data_dumps
    env_file:
      - ./.env/.prod-whg3
    depends_on:
      - redis
      - db_beta
    restart: unless-stopped

  flower:
    image: whg3_web:latest
    command: >
      sh -c '
        until celery -A whg inspect ping; do
          echo "Celery workers not available" >&2;
          sleep 1;
        done;
        echo "Celery workers are available" >&2;
        celery -A whg --broker=${CELERY_BROKER} flower
      '
    container_name: flower
    networks:
      - WHG3
    volumes:
      - .:/app
      - /home/whgadmin/sites/whgv3/media:/app/media
      - /home/whgadmin/sites/whgv3/static:/app/static
      - /home/whgadmin/sites/whgv3/cache:/app/cache
      - /home/whgadmin/logs/whgv3:/app/whg/logs
      - /home/whgadmin/sites/data_dumps:/app/data_dumps
    env_file:
      - ./.env/.prod-whg3
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db_beta
    restart: unless-stopped
