FROM --platform=linux/amd64 python:3.10.7-slim-bullseye

LABEL maintainer="WHC @ Pitt"

ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1
ENV MAX_MAP_COUNT 262144

RUN groupadd whgadmin
# 1000 matches whgadmin in ubuntu
ARG WHGADMIN_PASSWORD
RUN useradd -rm -d /home/whgadmin -g whgadmin -s /bin/bash \
    -G sudo -u 1000 whgadmin -p "$(openssl passwd -1 $WHGADMIN_PASSWORD)"

EXPOSE 8003

RUN apt-get update && \
	apt-get install -y lsb-release curl gnupg2 && \
	# Update to ensure inclusion of the PostgreSQL 15 repository
	echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" >> /etc/apt/sources.list.d/pgdg.list && \
    curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update && \
    apt-get install -y build-essential python3-gdal libpq-dev sudo nano locate curl redis-server postgresql-15 postgis \
    # clean up unused files
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /app/static && chown -R whgadmin:whgadmin /app/static

COPY ./requirements.txt /tmp/requirements.txt
RUN python -m venv /py && \
    /py/bin/pip install --upgrade pip setuptools wheel && \
    /py/bin/pip install -r /tmp/requirements.txt && \
    rm -rf /tmp

# Set correct ownership and permissions for the migrations directories
RUN chown -R whgadmin:root /py/lib/python3.10/site-packages/captcha/migrations/
RUN chown -R whgadmin:root /py/lib/python3.10/site-packages/guardian/migrations/

COPY ./compose/local/django/entrypoint.sh /entrypoint
# convert Windows line endings to UNIX line endings.
RUN sed -i 's/\r$//g' /entrypoint
RUN chmod +x /entrypoint

COPY ./compose/production/django/start-prod.sh /start
RUN sed -i 's/\r$//g' /start
RUN chmod +x /start

COPY ./compose/local/django/start-livereload.sh /start-livereload
RUN sed -i 's/\r$//g' /start-livereload
RUN chmod +x /start-livereload

COPY ./compose/local/django/celery/worker/start.sh /start-celeryworker
RUN sed -i 's/\r$//g' /start-celeryworker
RUN chmod +x /start-celeryworker

COPY ./compose/local/django/celery/beat/start.sh /start-celerybeat
RUN sed -i 's/\r$//g' /start-celerybeat
RUN chmod +x /start-celerybeat

COPY ./compose/local/django/celery/flower/start.sh /start-flower
RUN sed -i 's/\r$//g' /start-flower
RUN chmod +x /start-flower

## Create debug log file
#RUN mkdir -p /whg/logs
#RUN touch /whg/logs/debug.log
#RUN chmod 777 /whg/logs/debug.log

WORKDIR /app

RUN mkdir -p /app/whg/logs && \
    touch /app/whg/logs/debug.log && \
    chmod 777 /app/whg/logs/debug.log

ENV PATH="/py/bin:$PATH"

USER whgadmin

ENTRYPOINT ["/entrypoint"]