FROM --platform=linux/amd64 python:3.10.7-slim-bullseye

LABEL maintainer="WHC @ Pitt"

ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1
ENV MAX_MAP_COUNT 262144

ARG WHGADMIN_PASSWORD
ARG APP_PORT

EXPOSE ${APP_PORT}

COPY ./entrypoints/ /entrypoints/
COPY ./requirements.txt /tmp/requirements.txt
    
RUN set -eux; \
    
	# Create groups only if they don't exist
	if ! getent group docker > /dev/null; then \
	    groupadd docker; \
	fi && \
	if ! getent group whgadmin > /dev/null; then \
	    groupadd whgadmin; \
	fi && \
    useradd -rm -d /home/whgadmin -g whgadmin -s /bin/bash -G docker,sudo -u 1000 whgadmin -p "$(openssl passwd -1 $WHGADMIN_PASSWORD)" && \
    
    # Update package lists and install necessary packages
    apt-get update && apt-get install -y lsb-release curl gnupg2 build-essential python3-gdal libpq-dev sudo nano locate netcat docker.io && \
    # Clean up unused files to reduce image size
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && \
    rm -rf /var/lib/apt/lists/* && \
    # Create and set permissions for static directory
    mkdir -p /app/static && chown -R whgadmin:whgadmin /app/static && \
    # Set up Python virtual environment and install dependencies
    python -m venv /py && \
    /py/bin/pip install --upgrade pip && \
    /py/bin/pip install -r /tmp/requirements.txt && \
    rm -rf /tmp && \
    # Convert Windows line endings to UNIX line endings and make entrypoint scripts executable
    sed -i 's/\r$//g' /entrypoints/*.sh && \
    chmod +x /entrypoints/*.sh && \
    # Set correct ownership and permissions for entrypoints and migrations directories
    chown -R whgadmin:root /entrypoints/ /py/lib/python3.10/site-packages/captcha/migrations/ /py/lib/python3.10/site-packages/guardian/migrations/

WORKDIR /app

ENV PATH="/py/bin:$PATH"

USER whgadmin
